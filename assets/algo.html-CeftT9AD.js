import{_ as l,c as a,a as t,o as n}from"./app-CHJ1qwaJ.js";const i={};function s(r,e){return n(),a("div",null,e[0]||(e[0]=[t('<h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h2><p>本章节主要记录一些C++中的特色数据类型。</p><ul><li><code>unorderd_map&lt;int, std::string&gt;</code> 字典，一般用于构建哈希表</li><li><code>unorderd_set&lt;int&gt;</code> 集合，可以用来查询是否有无重复</li></ul><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串"><span>字符串</span></a></h2><h3 id="快慢指针" tabindex="-1"><a class="header-anchor" href="#快慢指针"><span>快慢指针</span></a></h3><p><strong>链表操作无压力</strong></p><h3 id="左右指针" tabindex="-1"><a class="header-anchor" href="#左右指针"><span>左右指针</span></a></h3><p><strong>反转数组</strong></p><h3 id="滑动窗口" tabindex="-1"><a class="header-anchor" href="#滑动窗口"><span>滑动窗口</span></a></h3><p>是一种双指针的变体。<strong>子串问题全靠它</strong>。</p><ul><li>首先不断增加右指针扩大窗口，直至窗口内的字符串符合要求or不满足要求。</li><li>然后不断增加左指针缩小窗口，直至窗口内的字符串不再符合要求or满足要求。</li><li>总之什么时候移动左/右指针灵活决定。</li></ul><h3 id="哈希表" tabindex="-1"><a class="header-anchor" href="#哈希表"><span>哈希表</span></a></h3><p>该类问题的关键是如何设计<strong>键</strong>。设计出占用内存小、精准的键是解决问题的关键，剩余的就是编写数组了。键不一定是一个字符串/数字，可以进行再匹配。</p><p>重复以上两步，直至右指针到达字符串末尾。</p>',14)]))}const d=l(i,[["render",s],["__file","algo.html.vue"]]),h=JSON.parse('{"path":"/blogs/algo/algo.html","title":"算法学习","lang":"en-US","frontmatter":{"title":"算法学习","date":"2025/01/25","tags":["算法"],"categories":["algorithm"]},"headers":[{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":2,"title":"字符串","slug":"字符串","link":"#字符串","children":[{"level":3,"title":"快慢指针","slug":"快慢指针","link":"#快慢指针","children":[]},{"level":3,"title":"左右指针","slug":"左右指针","link":"#左右指针","children":[]},{"level":3,"title":"滑动窗口","slug":"滑动窗口","link":"#滑动窗口","children":[]},{"level":3,"title":"哈希表","slug":"哈希表","link":"#哈希表","children":[]}]}],"git":{"createdTime":1737880610000,"updatedTime":1737880610000,"contributors":[{"name":"lluosi","email":"1340498501@qq.com","commits":1}]},"filePathRelative":"blogs/algo/algo.md"}');export{d as comp,h as data};
