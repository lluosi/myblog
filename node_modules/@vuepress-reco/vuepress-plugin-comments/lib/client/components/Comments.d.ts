declare const _default: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    hideComments: {
        type: BooleanConstructor;
        default: boolean;
    };
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}> | null, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    hideComments: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & Readonly<{}>, {
    hideComments: boolean;
}, {}, {
    Valine: import("vue").DefineComponent<{
        options: {
            [x: string]: unknown;
        };
    }, void, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
        options: {
            [x: string]: unknown;
        };
    }> & Readonly<{}>, {
        options: Record<string, any>;
    }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
    Waline: import("vue").DefineComponent<{
        options: {
            [x: string]: unknown;
        };
    }, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
        options: {
            [x: string]: unknown;
        };
    }> & Readonly<{}>, {
        options: Record<string, any>;
    }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
    Giscus: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
        options: {
            type: import("vue").PropType<import("@giscus/vue").GiscusProps>;
            default(): {};
        };
    }>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
        options: {
            type: import("vue").PropType<import("@giscus/vue").GiscusProps>;
            default(): {};
        };
    }>> & Readonly<{}>, {
        options: import("@giscus/vue").GiscusProps;
    }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default _default;
